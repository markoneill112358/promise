<!doctype html>
<html>
<head>
<meta charset="utf-8" />
<title>Studies</title>
<!--This document is designed to display links from a text file which gets appended periodically with new links and emailed to myself plus I get to experiment with some javascript. -->

<style>
	body{
		font-size:16px;		
	}
	div#content{	
		font-family: verdana;
		font-size:1em;
		line-height: 1.5em;
		padding-left: 8%;
		padding-top: 75px;
	}
	div#content a{ 
		color:#555555;
		text-decoration:none;
		font-weight:170px;
		white-space:nowrap;
	}
	div#content a:hover{
		color:#AA5555;
	}


</style>

<script>
	
	//using 'let' or 'var' here makes no difference since it is already in the global scope anyway
	var getFileContents = function (source) {//get data from text file
		
		try{
			var req=new XMLHttpRequest();
		}
		catch(err){//overkill since nobody uses <IE11
			if(err.name=='ReferenceError'){
				try{
					var req=new ActiveXObject("Microsoft.XMLHTTP");
				}
				catch(err){
					alert(err);
					return;
				}
			}
		}
		let promise=new Promise(function (success, failure) {

			req.open('GET', source);
			req.send();
			req.onreadystatechange = function () {
		
				if (this.readyState === 4) {//Asynchronous activity occurring.
					if (this.status === 200) {//Asynchronous activity successful completion.
						success(this.response);
					} else {
						failure(this.statusText);
					}
				}
		
			}
		
		});
		return promise;

	}
	
	var create=function (tag,append_to,args){
		
		let e = document.createElement(tag);
		if(tag=='a'){
			e.href = args.href;
			e.innerHTML = args.text;
			e.target = '_blank';
		}
		append_to.appendChild(e);
	}
	
	var addLink = function (){
	
		addLink.prototype.link=function(json,append_to){
			
			if(json.href=='') return;
			create('a',append_to,json);
			create('br',append_to);
		
		}
	
	}

	var makeLinks = function(source,target) {
	   
		getFileContents(source).then(function (response) {//getFileContents returns a promise when asynchronous function completes

			let json=response.split('\n');
			json.sort();
			for(j in json){
				let row=new addLink().link(JSON.parse(json[j]),target);
			}
		
		}, function (error_message) {//occurs when promise returns an error
		   
		  	alert('Error Message: '+error_message);
		
		});
	
	}
	
	document.addEventListener( "DOMContentLoaded",  function(){//native javascript domReady
			
		makeLinks('links.txt',document.getElementById('content'));
	
	});

</script>

</head>
<body>

	<div id="content"></div>

</body>
</html>